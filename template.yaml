apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: gcp-cloud-sql-template-v2
  title: GCP - Cloud SQL - V2
  description: Create a Cloud SQL instance in GCP
  tags:
    - infra
    - terraform
    - gcp
    - cloud-sql
spec:
  owner: group:infraops
  type: database

  parameters:
    - title: About
      required:
        - component_id
      properties:
        component_id:
          title: Name
          type: string
          description: The unique name of the database
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Description of the database

    - title: Ownership
      required:
        - organisation
        - owner
      properties:
        organisation:
          title: Organisation
          type: string
          description: GitHub Organisation where this will live
          enum:
            - spotify-portal-public-demo
        owner:
          title: Owner
          type: string
          description: Owner of the database
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              - kind: Group
        system:
          title: System
          type: string
          description: The system for the database
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              - kind: System

    - title: Configuration
      required:
        - region
        - db_password
      properties:
        region:
          title: GCP Region
          type: string
          description: GCP region of the database
          enum:
            - europe-west1
            - us-central1
            - asia-east1
        db_password:
          title: Root Password
          type: string
          description: Root password for the database, will be stored as a GitHub secret
          ui:field: Secret

  steps:
    - id: template
      name: Fetch Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          organisation: ${{ parameters.organisation }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          region: ${{ parameters.region }}

    - id: create_catalog
      name: Create Catalog File
      action: catalog:write
      input:
        entity:
          apiVersion: backstage.io/v1alpha1
          kind: Resource
          metadata:
            name: ${{ parameters.component_id }}
            description: ${{ parameters.description }}
            tags:
              - gcp
              - cloud-sql
            annotations:
              backstage.io/techdocs-ref: dir:.
              github.com/project-slug: ${{ parameters.organisation }}/${{ parameters.component_id }}
          spec:
            type: database
            lifecycle: experimental
            owner: ${{ parameters.owner }}
            system: ${{ parameters.system }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        repoUrl: github.com?owner=${{ parameters.organisation }}&repo=${{ parameters.component_id }}
        description: This is ${{ parameters.component_id }}
        repoVisibility: public
        defaultBranch: main
        protectEnforceAdmins: false
        secrets:
          DB_PASSWORD: ${{ secrets.db_password }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
